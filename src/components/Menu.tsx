import { useState } from 'react';
import { Search, Plus, Heart } from 'lucide-react';

interface MenuItem {
  id: number;
  name: string;
  category: string;
  price: number;
  image: string;
  description: string;
  popular?: boolean;
  weight: string;
  pieces?: number;
}

const Menu = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');

  const menuItems: MenuItem[] = [
    { id: 1, name: '–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫', category: 'rolls', price: 3500, image: 'üç£', description: '–õ–æ—Å–æ—Å—å, —Å—ã—Ä —Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è, –æ–≥—É—Ä–µ—Ü', popular: true, weight: '250–≥', pieces: 8 },
    { id: 2, name: '–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å –∫—Ä–∞–±–æ–º', category: 'rolls', price: 4200, image: 'üç£', description: '–ö—Ä–∞–±, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü, —Ç–æ–±–∏–∫–æ', popular: true, weight: '280–≥', pieces: 8 },
    { id: 3, name: '–î—Ä–∞–∫–æ–Ω', category: 'rolls', price: 4800, image: 'üç£', description: '–£–≥–æ—Ä—å, –æ–≥—É—Ä–µ—Ü, –∞–≤–æ–∫–∞–¥–æ —Å–≤–µ—Ä—Ö—É', weight: '300–≥', pieces: 8 },
    { id: 4, name: '–ê–ª—è—Å–∫–∞', category: 'rolls', price: 3800, image: 'üç£', description: '–õ–æ—Å–æ—Å—å, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü', weight: '260–≥', pieces: 8 },
    { id: 5, name: '–ö–∞–Ω–∞–¥–∞', category: 'rolls', price: 4500, image: 'üç£', description: '–£–≥–æ—Ä—å, –æ–≥—É—Ä–µ—Ü, –∫—É–Ω–∂—É—Ç', weight: '290–≥', pieces: 8 },
    { id: 6, name: '–°–µ—Ç –¢–æ–∫–∏–æ', category: 'sets', price: 12500, image: 'üç±', description: '32 —à—Ç: –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è, –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è, –î—Ä–∞–∫–æ–Ω, –ö–∞–Ω–∞–¥–∞', popular: true, weight: '1200–≥', pieces: 32 },
    { id: 7, name: '–°–µ—Ç –û—Å–∞–∫–∞', category: 'sets', price: 9900, image: 'üç±', description: '24 —à—Ç: –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è, –ê–ª—è—Å–∫–∞, –≠–±–∏', weight: '900–≥', pieces: 24 },
    { id: 8, name: '–°–µ—Ç –¥–ª—è –¥–≤–æ–∏—Ö', category: 'sets', price: 15900, image: 'üç±', description: '40 —à—Ç: –∞—Å—Å–æ—Ä—Ç–∏ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ä–æ–ª–ª–æ–≤', popular: true, weight: '1500–≥', pieces: 40 },
    { id: 9, name: '–°–∞—à–∏–º–∏ –ª–æ—Å–æ—Å—å', category: 'sashimi', price: 5500, image: 'üêü', description: '–°–≤–µ–∂–∏–π –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π –ª–æ—Å–æ—Å—å', weight: '150–≥', pieces: 5 },
    { id: 10, name: '–°–∞—à–∏–º–∏ —Ç—É–Ω–µ—Ü', category: 'sashimi', price: 6200, image: 'üêü', description: '–°–≤–µ–∂–∏–π —Ç—É–Ω–µ—Ü', weight: '150–≥', pieces: 5 },
    { id: 11, name: '–°–∞—à–∏–º–∏ –º–∏–∫—Å', category: 'sashimi', price: 8900, image: 'üêü', description: '–õ–æ—Å–æ—Å—å, —Ç—É–Ω–µ—Ü, –º–æ—Ä—Å–∫–æ–π –æ–∫—É–Ω—å', weight: '200–≥', pieces: 9 },
    { id: 12, name: '–¢–æ–º –Ø–º', category: 'soups', price: 2800, image: 'üçú', description: '–û—Å—Ç—Ä—ã–π —Ç–∞–π—Å–∫–∏–π —Å—É–ø —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏', popular: true, weight: '350–º–ª' },
    { id: 13, name: '–ú–∏—Å–æ —Å—É–ø', category: 'soups', price: 1500, image: 'üçú', description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —è–ø–æ–Ω—Å–∫–∏–π —Å—É–ø', weight: '300–º–ª' },
    { id: 14, name: '–°—É–ø —Å –ª–æ—Å–æ—Å–µ–º', category: 'soups', price: 2200, image: 'üçú', description: '–ö—Ä–µ–º–æ–≤—ã–π —Å—É–ø —Å –∫—É—Å–æ—á–∫–∞–º–∏ –ª–æ—Å–æ—Å—è', weight: '350–º–ª' },
    { id: 15, name: '–¢–µ–º–ø—É—Ä–∞ –∫—Ä–µ–≤–µ—Ç–∫–∏', category: 'hot', price: 3200, image: 'üç§', description: '–ö—Ä–µ–≤–µ—Ç–∫–∏ –≤ –∫–ª—è—Ä–µ, 5 —à—Ç', weight: '180–≥', pieces: 5 },
    { id: 16, name: '–ì—ë–¥–∑–∞', category: 'hot', price: 2100, image: 'ü•ü', description: '–Ø–ø–æ–Ω—Å–∫–∏–µ –ø–µ–ª—å–º–µ–Ω–∏, 6 —à—Ç', weight: '150–≥', pieces: 6 },
    { id: 17, name: '–ö—É—Ä–∏—Ü–∞ —Ç–µ—Ä–∏—è–∫–∏', category: 'hot', price: 2800, image: 'üçó', description: '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ –≤ —Å–æ—É—Å–µ —Ç–µ—Ä–∏—è–∫–∏', weight: '200–≥' },
    { id: 18, name: '–ü–æ–∫–µ —Å –ª–æ—Å–æ—Å–µ–º', category: 'poke', price: 3900, image: 'ü•ó', description: '–†–∏—Å, –ª–æ—Å–æ—Å—å, –∞–≤–æ–∫–∞–¥–æ, —ç–¥–∞–º–∞–º–µ', popular: true, weight: '350–≥' },
    { id: 19, name: '–ü–æ–∫–µ —Å —Ç—É–Ω—Ü–æ–º', category: 'poke', price: 4200, image: 'ü•ó', description: '–†–∏—Å, —Ç—É–Ω–µ—Ü, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü', weight: '350–≥' },
    { id: 20, name: '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ –ø–æ–∫–µ', category: 'poke', price: 2900, image: 'ü•ó', description: '–†–∏—Å, –∞–≤–æ–∫–∞–¥–æ, –æ–≥—É—Ä–µ—Ü, —ç–¥–∞–º–∞–º–µ', weight: '300–≥' },
    { id: 21, name: '–ú–æ—Ç–∏', category: 'desserts', price: 1200, image: 'üç°', description: '–Ø–ø–æ–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç, 3 —à—Ç', weight: '90–≥', pieces: 3 },
    { id: 22, name: '–î–æ—Ä–∞—è–∫–∏', category: 'desserts', price: 1800, image: 'ü•û', description: '–Ø–ø–æ–Ω—Å–∫–∏–µ –±–ª–∏–Ω—á–∏–∫–∏ —Å –Ω–∞—á–∏–Ω–∫–æ–π', weight: '120–≥', pieces: 2 },
    { id: 23, name: '–ó–µ–ª–µ–Ω—ã–π —á–∞–π –º–æ—Ä–æ–∂–µ–Ω–æ–µ', category: 'desserts', price: 1500, image: 'üç®', description: '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ —Å–æ –≤–∫—É—Å–æ–º –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è', weight: '100–≥' },
  ];

  const categories = [
    { id: 'all', name: '–í—Å–µ –±–ª—é–¥–∞', count: menuItems.length },
    { id: 'rolls', name: '–†–æ–ª–ª—ã', count: menuItems.filter(item => item.category === 'rolls').length },
    { id: 'sets', name: '–°–µ—Ç—ã', count: menuItems.filter(item => item.category === 'sets').length },
    { id: 'sashimi', name: '–°–∞—à–∏–º–∏', count: menuItems.filter(item => item.category === 'sashimi').length },
    { id: 'soups', name: '–°—É–ø—ã', count: menuItems.filter(item => item.category === 'soups').length },
    { id: 'hot', name: '–ì–æ—Ä—è—á–µ–µ', count: menuItems.filter(item => item.category === 'hot').length },
    { id: 'poke', name: '–ü–æ–∫–µ', count: menuItems.filter(item => item.category === 'poke').length },
    { id: 'desserts', name: '–î–µ—Å–µ—Ä—Ç—ã', count: menuItems.filter(item => item.category === 'desserts').length }
  ];

  const filteredItems = menuItems.filter(item => {
    const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory;
    const matchesSearch = item.name.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  return (
    <div className="bg-white">

      {/* Hero */}
      <section className="bg-gradient-to-br from-gray-100 via-gray-50 to-white py-16">
        <div className="container mx-auto px-4">
          <div className="max-w-3xl mx-auto text-center">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
              –ù–∞—à–µ –º–µ–Ω—é
            </h1>
            <p className="text-xl text-gray-700">
              –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –±–æ–ª–µ–µ —á–µ–º 20 –≤–∏–¥–æ–≤ —Ä–æ–ª–ª–æ–≤, —Å–µ—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —è–ø–æ–Ω—Å–∫–∏—Ö –±–ª—é–¥
            </p>
          </div>
        </div>
      </section>

      <div className="container mx-auto px-4 py-8">
        <div className="flex gap-8">
          {/* Categories Sidebar */}
          <aside className="hidden lg:block w-64">
            <div className="bg-white border border-gray-200 rounded-xl p-6 sticky top-24">
              <h3 className="text-gray-900 font-semibold text-lg mb-4">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
              <div className="space-y-2">
                {categories.map(category => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`w-full flex items-center justify-between px-4 py-3 rounded-lg transition-all ${
                      selectedCategory === category.id
                        ? 'bg-red-600 text-white'
                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                    }`}
                  >
                    <span>{category.name}</span>
                    <span className="text-sm opacity-75">{category.count}</span>
                  </button>
                ))}
              </div>
            </div>
          </aside>

          {/* Menu Items */}
          <main className="flex-1 min-w-0">
            {/* Search Bar */}
            <div className="mb-6">
              <div className="relative">
                <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –±–ª—é–¥..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="w-full pl-12 pr-4 py-3 bg-white border border-gray-300 rounded-lg text-gray-900 placeholder-gray-500 focus:outline-none focus:border-red-500 transition-colors"
                />
              </div>
            </div>

            {/* Mobile Categories */}
            <div className="lg:hidden mb-6 overflow-x-auto pb-2">
              <div className="flex space-x-3 min-w-max">
                {categories.map(category => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`px-4 py-2 rounded-lg whitespace-nowrap transition-all text-sm ${
                      selectedCategory === category.id
                        ? 'bg-red-600 text-white'
                        : 'bg-gray-100 text-gray-700'
                    }`}
                  >
                    {category.name}
                  </button>
                ))}
              </div>
            </div>

            {/* Menu Grid */}
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6">
              {filteredItems.map(item => (
                <div key={item.id} className="bg-white border border-gray-200 rounded-xl overflow-hidden hover:shadow-lg transition-all">
                  <div className="relative h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <span className="text-6xl">{item.image}</span>
                    {item.popular && (
                      <span className="absolute top-3 right-3 bg-red-600 text-white text-xs px-3 py-1 rounded-full font-semibold">
                        –•–ò–¢
                      </span>
                    )}
                    <button className="absolute top-3 left-3 text-gray-400 hover:text-red-500 transition-colors p-1">
                      <Heart className="w-6 h-6" />
                    </button>
                  </div>
                  <div className="p-5">
                    <h3 className="text-gray-900 font-semibold text-lg mb-2">{item.name}</h3>
                    <p className="text-gray-400 text-sm mb-3 line-clamp-2">{item.description}</p>
                    <div className="flex items-center justify-between text-gray-500 text-sm mb-4">
                      <span>{item.weight}</span>
                      {item.pieces && <span>{item.pieces} —à—Ç</span>}
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-2xl font-bold text-gray-900">‚Ç∏{item.price.toLocaleString()}</span>
                      <button className="bg-red-600 hover:bg-red-700 text-white px-6 py-2.5 rounded-lg font-medium transition-all transform hover:scale-105 flex items-center space-x-2">
                        <Plus className="w-4 h-4" />
                        <span>–í –∫–æ—Ä–∑–∏–Ω—É</span>
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {filteredItems.length === 0 && (
              <div className="text-center py-12">
                <p className="text-gray-500 text-lg">–ë–ª—é–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              </div>
            )}
          </main>
        </div>
      </div>
    </div>
  );
};

export default Menu;